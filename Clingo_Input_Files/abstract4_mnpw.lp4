r(1..24).
bit(M, 0, V) :- r(M), M1=M/1, V = M1 \ 5.
bit(M, 1, V) :- r(M), M1=M/5, V = M1 \ 5.
in(X, M) :- r(M), concept(X, T, N), N1=N+1, bit(M, T, N1).
out(X, M) :- r(M), concept(X, T, N), N1=N+1, not bit(M, T, N1).
in(X, M) :- r(M), concept2(X, _), not out(X, M).
irs(M) :- in(X, M), out(X, M), r(M), concept2(X, _).
irs(X) :- ir(X, _).
vrs(X) :- vr(X, _).
vr(X, X) :- not irs(X), r(X).
ir(X, X) :- not vrs(X), r(X).
:- vrs(X), irs(X).

%tax("1", 0).
%tax("2", 1).
concept2(A, B) :- concept(A,B,_).
concept2("1_A", 0).
concept("1_B", 0, 0).
concept("1_C", 0, 1).
concept("1_D", 0, 2).
concept("1_E", 0, 3).
concept2("2_A", 1).
concept("2_B", 1, 0).
concept("2_D", 1, 1).
concept("2_F", 1, 2).
concept("2_G", 1, 3).

out("1_A", X) :- out("1_B", X), out("1_C", X), out("1_D", X), out("1_E", X).
out("2_A", X) :- out("2_B", X), out("2_D", X), out("2_F", X), out("2_G", X).

ir(X, r6) :- in("1_B", X), out("1_A", X).
:- #count {X : vrs(X), in("1_B", X), in("1_A", X)} = 0.

ir(X, r7) :- in("1_C", X), out("1_A", X).
:- #count {X : vrs(X), in("1_C", X), in("1_A", X)} = 0.

ir(X, r8) :- in("1_D", X), out("1_A", X).
:- #count {X : vrs(X), in("1_D", X), in("1_A", X)} = 0.

ir(X, r9) :- in("1_E", X), out("1_A", X).
:- #count {X : vrs(X), in("1_E", X), in("1_A", X)} = 0.

ir(X, r16) :- in("2_B", X), out("2_A", X).
:- #count {X : vrs(X), in("2_B", X), in("2_A", X)} = 0.

ir(X, r17) :- in("2_D", X), out("2_A", X).
:- #count {X : vrs(X), in("2_D", X), in("2_A", X)} = 0.

ir(X, r18) :- in("2_F", X), out("2_A", X).
:- #count {X : vrs(X), in("2_F", X), in("2_A", X)} = 0.

ir(X, r19) :- in("2_G", X), out("2_A", X).
:- #count {X : vrs(X), in("2_G", X), in("2_A", X)} = 0.

ir(X, r0) :- in("1_B", X), in("1_C", X).
:- #count {X : vrs(X), in("1_B", X), out("1_C", X)} = 0.
:- #count {X : vrs(X), in("1_C", X), out("1_B", X)} = 0.

ir(X, r1) :- in("1_B", X), in("1_D", X).
:- #count {X : vrs(X), in("1_B", X), out("1_D", X)} = 0.
:- #count {X : vrs(X), in("1_D", X), out("1_B", X)} = 0.

ir(X, r2) :- in("1_B", X), in("1_E", X).
:- #count {X : vrs(X), in("1_B", X), out("1_E", X)} = 0.
:- #count {X : vrs(X), in("1_E", X), out("1_B", X)} = 0.

ir(X, r3) :- in("1_C", X), in("1_D", X).
:- #count {X : vrs(X), in("1_C", X), out("1_D", X)} = 0.
:- #count {X : vrs(X), in("1_D", X), out("1_C", X)} = 0.

ir(X, r4) :- in("1_C", X), in("1_E", X).
:- #count {X : vrs(X), in("1_C", X), out("1_E", X)} = 0.
:- #count {X : vrs(X), in("1_E", X), out("1_C", X)} = 0.

ir(X, r5) :- in("1_D", X), in("1_E", X).
:- #count {X : vrs(X), in("1_D", X), out("1_E", X)} = 0.
:- #count {X : vrs(X), in("1_E", X), out("1_D", X)} = 0.

ir(X, r10) :- in("2_B", X), in("2_D", X).
:- #count {X : vrs(X), in("2_B", X), out("2_D", X)} = 0.
:- #count {X : vrs(X), in("2_D", X), out("2_B", X)} = 0.

ir(X, r11) :- in("2_B", X), in("2_F", X).
:- #count {X : vrs(X), in("2_B", X), out("2_F", X)} = 0.
:- #count {X : vrs(X), in("2_F", X), out("2_B", X)} = 0.

ir(X, r12) :- in("2_B", X), in("2_G", X).
:- #count {X : vrs(X), in("2_B", X), out("2_G", X)} = 0.
:- #count {X : vrs(X), in("2_G", X), out("2_B", X)} = 0.

ir(X, r13) :- in("2_D", X), in("2_F", X).
:- #count {X : vrs(X), in("2_D", X), out("2_F", X)} = 0.
:- #count {X : vrs(X), in("2_F", X), out("2_D", X)} = 0.

ir(X, r14) :- in("2_D", X), in("2_G", X).
:- #count {X : vrs(X), in("2_D", X), out("2_G", X)} = 0.
:- #count {X : vrs(X), in("2_G", X), out("2_D", X)} = 0.

ir(X, r15) :- in("2_F", X), in("2_G", X).
:- #count {X : vrs(X), in("2_F", X), out("2_G", X)} = 0.
:- #count {X : vrs(X), in("2_G", X), out("2_F", X)} = 0.

:- #count {A : vrs(A), in("1_A", A), out("2_A", A)} > 0,
   #count {B : vrs(B), in("1_A", B), in("2_A", B)} = 0,
   #count {C : vrs(C), out("1_A", C), in("2_A", C)} > 0.
:- #count {A : vrs(A), in("1_A", A), out("2_A", A)} > 0,
   #count {B : vrs(B), in("1_A", B), in("2_A", B)} > 0,
   #count {C : vrs(C), out("1_A", C), in("2_A", C)} = 0.
:- #count {A : vrs(A), in("1_A", A), out("2_A", A)} > 0,
   #count {B : vrs(B), in("1_A", B), in("2_A", B)} > 0,
   #count {C : vrs(C), out("1_A", C), in("2_A", C)} > 0.
ir(X, r20) :- in("1_A", X), out("2_A", X).
:- #count {X : vrs(X), in("1_A", X), in("2_A", X)} = 0.
vr(X, r20) ; ir(X, r20) :- out("1_A", X), in("2_A", X).

:- #count {A : vrs(A), in("1_B", A), out("2_B", A)} > 0,
   #count {B : vrs(B), in("1_B", B), in("2_B", B)} = 0,
   #count {C : vrs(C), out("1_B", C), in("2_B", C)} > 0.
:- #count {A : vrs(A), in("1_B", A), out("2_B", A)} > 0,
   #count {B : vrs(B), in("1_B", B), in("2_B", B)} > 0,
   #count {C : vrs(C), out("1_B", C), in("2_B", C)} = 0.
:- #count {A : vrs(A), in("1_B", A), out("2_B", A)} > 0,
   #count {B : vrs(B), in("1_B", B), in("2_B", B)} > 0,
   #count {C : vrs(C), out("1_B", C), in("2_B", C)} > 0.
:- #count {A : vrs(A), in("1_B", A), out("2_B", A)} = 0,
   #count {B : vrs(B), in("1_B", B), in("2_B", B)} > 0,
   #count {C : vrs(C), out("1_B", C), in("2_B", C)} > 0.
ir(X, r21) :- in("1_B", X), out("2_B", X).
:- #count {X : vrs(X), in("1_B", X), in("2_B", X)} = 0.
ir(X, r21) :- out("1_B", X), in("2_B", X).

:- #count {A : vrs(A), in("1_C", A), out("2_F", A)} > 0,
   #count {B : vrs(B), in("1_C", B), in("2_F", B)} = 0,
   #count {C : vrs(C), out("1_C", C), in("2_F", C)} > 0.
:- #count {A : vrs(A), in("1_C", A), out("2_F", A)} = 0,
   #count {B : vrs(B), in("1_C", B), in("2_F", B)} > 0,
   #count {C : vrs(C), out("1_C", C), in("2_F", C)} = 0.
:- #count {A : vrs(A), in("1_C", A), out("2_F", A)} > 0,
   #count {B : vrs(B), in("1_C", B), in("2_F", B)} > 0,
   #count {C : vrs(C), out("1_C", C), in("2_F", C)} = 0.
vr(X, r22) ; ir(X, r22) :- in("1_C", X), out("2_F", X).
:- #count {X : vrs(X), in("1_C", X), in("2_F", X)} = 0.
:- #count {X : vrs(X), out("1_C", X), in("2_F", X)} = 0.

:- #count {A : vrs(A), in("1_D", A), out("2_D", A)} > 0,
   #count {B : vrs(B), in("1_D", B), in("2_D", B)} = 0,
   #count {C : vrs(C), out("1_D", C), in("2_D", C)} > 0.
:- #count {A : vrs(A), in("1_D", A), out("2_D", A)} > 0,
   #count {B : vrs(B), in("1_D", B), in("2_D", B)} > 0,
   #count {C : vrs(C), out("1_D", C), in("2_D", C)} = 0.
:- #count {A : vrs(A), in("1_D", A), out("2_D", A)} > 0,
   #count {B : vrs(B), in("1_D", B), in("2_D", B)} > 0,
   #count {C : vrs(C), out("1_D", C), in("2_D", C)} > 0.
:- #count {A : vrs(A), in("1_D", A), out("2_D", A)} = 0,
   #count {B : vrs(B), in("1_D", B), in("2_D", B)} > 0,
   #count {C : vrs(C), out("1_D", C), in("2_D", C)} > 0.
ir(X, r23) :- in("1_D", X), out("2_D", X).
:- #count {X : vrs(X), in("1_D", X), in("2_D", X)} = 0.
ir(X, r23) :- out("1_D", X), in("2_D", X).

:- #count {A : vrs(A), in("1_E", A), out("2_G", A)} > 0,
   #count {B : vrs(B), in("1_E", B), in("2_G", B)} = 0,
   #count {C : vrs(C), out("1_E", C), in("2_G", C)} > 0.
:- #count {A : vrs(A), in("1_E", A), out("2_G", A)} > 0,
   #count {B : vrs(B), in("1_E", B), in("2_G", B)} > 0,
   #count {C : vrs(C), out("1_E", C), in("2_G", C)} = 0.
:- #count {A : vrs(A), in("1_E", A), out("2_G", A)} = 0,
   #count {B : vrs(B), in("1_E", B), in("2_G", B)} > 0,
   #count {C : vrs(C), out("1_E", C), in("2_G", C)} > 0.
vr(X, r24) ; ir(X, r24) :- in("1_E", X), out("2_G", X).
:- #count {X : vrs(X), in("1_E", X), in("2_G", X)} = 0.
vr(X, r24) ; ir(X, r24) :- out("1_E", X), in("2_G", X).

:- rel(X, Y, "o"), rel(X, Y, "="), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "o"), rel(X, Y, "<"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "o"), rel(X, Y, "!"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "o"), rel(X, Y, ">"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "="), rel(X, Y, "<"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "="), rel(X, Y, "!"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "="), rel(X, Y, ">"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "<"), rel(X, Y, "!"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "<"), rel(X, Y, ">"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "!"), rel(X, Y, ">"), concept2(X, N1), concept2(Y, N2).
:- not rel(X, Y, "o"), not rel(X, Y, "="), not rel(X, Y, "<"), not rel(X, Y, "!"), not rel(X, Y, ">"), concept2(X, N1), concept2(Y, N2), N1 < N2, not ncf(X), not ncf(Y).
rel(X, Y, "o") :- hint(X, Y, 0), hint(X, Y, 1), hint(X, Y, 2).
rel(X, Y, "=") :- not hint(X, Y, 0), hint(X, Y, 1), not hint(X, Y, 2).
rel(X, Y, "<") :- not hint(X, Y, 0), hint(X, Y, 1), hint(X, Y, 2).
rel(X, Y, "!") :- hint(X, Y, 0), not hint(X, Y, 1), hint(X, Y, 2).
rel(X, Y, ">") :- hint(X, Y, 0), hint(X, Y, 1), not hint(X, Y, 2).
hint(X, Y, 0) :- concept2(X, N1), concept2(Y, N2), N1 < N2, vrs(R), in(X, R), out(Y, R), not ncf(X), not ncf(Y).
hint(X, Y, 1) :- concept2(X, N1), concept2(Y, N2), N1 < N2, vrs(R), in(X, R), in(Y, R), not ncf(X), not ncf(Y).
hint(X, Y, 2) :- concept2(X, N1), concept2(Y, N2), N1 < N2, vrs(R), out(X, R), in(Y, R), not ncf(X), not ncf(Y).

#show rel/3.